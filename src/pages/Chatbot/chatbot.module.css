/* src/pages/Chatbot/chatbot.module.css */

.container {
  display: flex;
  flex-direction: column;
  height: 100vh;
  background-color: #1e1e1e;
  color: #eeeeee;
}

.header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 12px 24px;
  background-color: #2c2c2c;
  border-bottom: 1px solid #3a3a3a;
}

.fieldsRow {
  display: flex;
  gap: 12px;
  align-items: center;
}

.darkSelect {
  background-color: #3a3a3a;
  color: #ffffff;
  border: 1px solid #555555;
  border-radius: 4px;
  padding: 6px 8px;
  min-width: 140px;
  appearance: none;
}

.employeeBox {
  background-color: #3a3a3a;
  color: #ffffff;
  border: 1px solid #555555;
  border-radius: 4px;
  padding: 6px 8px;
  min-width: 140px;
  text-align: center;
}

.logoutBtn {
  padding: 6px 12px;
  background-color: #e06c75;
  color: #ffffff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;
}

.logoutBtn:hover {
  background-color: #c65a62;
}

.chatbotBody {
  flex: 1;
  padding: 24px;
  background-color: #1e1e1e;
  overflow-y: auto;
}

/* ─────────────────────────────────────────────────────────────────────────────
   챗봇 컨텐츠 영역: 가로 전체를 사용하도록 폭 지정
───────────────────────────────────────────────────────────────────────────── */
.chatbotContent {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

/* ─────────────────────────────────────────────────────────────────────────────
   제목 스타일 추가: .subheading
───────────────────────────────────────────────────────────────────────────── */
.subheading {
  font-size: 1.4rem;
  font-weight: 600;
  color: #ffffff;
  margin-bottom: 16px;
  /* 그리드 위아래 여백 확보 */
}

/* ─────────────────────────────────────────────────────────────────────────────
   챗봇 카드 리스트 컨테이너: CSS Grid 방식으로 가로 채우기
   → 컬럼을 minmax(25%, 1fr)로 지정하여 카드가 뷰포트의 25% 너비를 가짐
   → 화면이 좁아지면 자동으로 다음 줄로 밀려나게 됨
   → justify-content: center로 남는 여백 시 가운데 정렬
───────────────────────────────────────────────────────────────────────────── */
.chatbotListContainer {
  display: grid;

  /* 
    minmax(25%, 1fr) 
      - 기본적으로 각 카드가 부모(뷰포트)의 25%를 차지하도록 함
      - 화면이 좁아져서 25%씩 나눌 수 없으면, 남은 공간만큼 줄어들어(`1fr`) 
        한 줄에 들어갈 카드 수가 자동으로 줄어듦
  */
  grid-template-columns: repeat(auto-fill, minmax(25%, 1fr));
  gap: 16px;
  /* 카드 간격 */
  margin-bottom: 24px;
  /* 그리드 아래 여백 (업로드 버튼과의 간격) */
  width: 100%;
  /* 부모 폭을 가득 채워 그리드가 정상 작동하도록 함 */
  justify-content: center;
  /* 여유 공간 있을 때 카드들을 가운데 정렬 */
}

/* ─────────────────────────────────────────────────────────────────────────────
   개별 카드: 
   width: 25vw (뷰포트의 25%)를 지정하여 고정 
   컬럼의 minmax 조건에 의해 화면이 좁아지면 1fr로 줄어듦
   max-width: 400px은 선택사항으로 절대 최대 너비 제한
   relative로 설정하여 삭제 버튼을 absolute로 배치
───────────────────────────────────────────────────────────────────────────── */
.chatbotCard {
  position: relative;
  /* 삭제 버튼을 카드 내부에 절대 위치시키기 위해 relative 설정 */
  background-color: #2a2a2a;
  border: 1px solid #3a3a3a;
  border-radius: 8px;
  padding: 16px;
  display: flex;
  flex-direction: column;
  gap: 12px;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.6);
  transition: transform 0.1s ease-in-out;

  /* 기본적으로 뷰포트의 25% 너비를 가짐 */
  width: 25vw;
  /* 필요에 따라 절대 최대 너비를 제한 */
  max-width: 400px;
  margin: 0 auto;
  /* 그리드 셀 안에서 가로 중앙 정렬 */
}

.chatbotCard:hover {
  transform: translateY(-2px);
}

.cardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
}

.chatbotName {
  font-size: 1.2rem;
  font-weight: 600;
  color: #ffffff;
}

.cardMeta {
  display: flex;
  flex-direction: column;
  gap: 4px;
  font-size: 0.9rem;
  color: #b0b0b0;
}

.cardMeta strong {
  color: #f0f0f0;
}

.cardActions {
  display: flex;
  gap: 8px;
  margin-top: 8px;
}

/* ─────────────────────────────────────────────────────────────────────────────
   삭제 버튼 (휴지통 아이콘) 우측 상단에 배치
───────────────────────────────────────────────────────────────────────────── */
.deleteButton {
  position: absolute;
  top: 8px;
  /* 카드 상단으로부터 8px 아래 */
  right: 8px;
  /* 카드 우측으로부터 8px 왼쪽 */
  background: transparent;
  border: none;
  color: #bbbbbb;
  font-size: 1.2rem;
  /* 아이콘 크기 */
  cursor: pointer;
  padding: 4px;
  border-radius: 4px;
  transition: background-color 0.15s ease-in-out, color 0.15s ease-in-out;
}

.deleteButton:hover {
  background-color: rgba(255, 255, 255, 0.1);
  color: #ff5555;
}

/* ─────────────────────────────────────────────────────────────────────────────
   “불러오기” / “재학습” 버튼: flex: 1을 유지하여 카드 폭을 균등 분할
───────────────────────────────────────────────────────────────────────────── */
.loadButton,
.retrainButton {
  flex: 1;
  background-color: #3a3a3a;
  color: #ffffff;
  border: none;
  border-radius: 4px;
  padding: 8px 12px;
  font-size: 0.9rem;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;
}

.loadButton:hover {
  background-color: #4a90e2;
}

.retrainButton {
  background-color: #5a5a5a;
}

.retrainButton:hover {
  background-color: #71828a;
}

/* ─────────────────────────────────────────────────────────────────────────────
   업로드 버튼 스타일 (.uploadBtn)
───────────────────────────────────────────────────────────────────────────── */
.uploadBtn {
  display: block;
  padding: 10px 20px;
  background-color: #007bff;
  color: #ffffff;
  border: none;
  border-radius: 4px;
  cursor: pointer;
  transition: background-color 0.2s ease-in-out;
  margin: 0 auto 40px;
  /* 가로 중앙 정렬 + 아래쪽 여백 확보 */
}

.uploadBtn:hover {
  background-color: #0069d9;
}

.uploadBtn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* ─────────────────────────────────────────────────────────────────────────────
   챗봇이 하나도 없을 때 표시되는 영역
───────────────────────────────────────────────────────────────────────────── */
.noChatbotContainer {
  margin-top: 40px;
  text-align: center;
}

.noChatbotMessage {
  font-size: 1rem;
  color: #ffcccc;
  margin-bottom: 16px;
}

/* ─────────────────────────────────────────────────────────────────────────────
   학습 로그 컨테이너 (학습 중에만 표시)
───────────────────────────────────────────────────────────────────────────── */
.logContainer {
  width: 90vw;
  max-width: 1100px;
  margin: 20px auto;
  background-color: #2a2a2a;
  border: 1px solid #444;
  border-radius: 4px;
  padding: 12px;
  max-height: 400px;
  overflow-y: auto;
}

.logTitle {
  margin: 0 0 8px 0;
  font-size: 1rem;
  color: #ffffff;
}

.logOutput {
  font-family: 'Courier New', monospace;
  font-size: 0.9rem;
  color: #e0e0e0;
}

.logStdout {
  color: #a0e0a0;
  white-space: pre-wrap;
  margin: 0;
}

.logError {
  color: #e08080;
  white-space: pre-wrap;
  margin: 0;
}

.logInfo {
  color: #80c0ff;
  white-space: pre-wrap;
  margin: 0;
}

/* ─────────────────────────────────────────────────────────────────────────────
   모달 관련 스타일
───────────────────────────────────────────────────────────────────────────── */
.modalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background-color: rgba(0, 0, 0, 0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 9999;
}

.modalContent {
  background-color: #282c34;
  color: #ffffff;
  padding: 20px 24px;
  border-radius: 8px;
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.5);
  width: 90%;
  max-width: 400px;
  text-align: center;
}

.nameInput {
  width: 100%;
  padding: 8px 10px;
  margin-top: 8px;
  margin-bottom: 16px;
  border: 1px solid #444;
  border-radius: 4px;
  background-color: #1e2228;
  color: #fff;
  font-size: 1rem;
}

.modalButtons {
  display: flex;
  justify-content: space-between;
  gap: 12px;
}

.confirmButton,
.cancelButton {
  flex: 1;
  padding: 8px 12px;
  border: none;
  border-radius: 4px;
  color: #fff;
  font-size: 1rem;
  cursor: pointer;
}

.confirmButton {
  background-color: #4caf50;
}

.confirmButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.confirmButton:hover:enabled {
  background-color: #2ecc71;
}

.cancelButton {
  background-color: #a94442;
}

.cancelButton:hover {
  background-color: #e74c3c;
}
