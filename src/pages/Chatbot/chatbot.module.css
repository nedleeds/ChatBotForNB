/* src/pages/Chatbot/chatbot.module.css */

:root {
  --bg-dark: #0a0a0d;
  --glass-bg: rgba(20, 20, 25, 0.1);
  --glass-border: rgba(0, 230, 118, 0.1);
  --glass-shadow: rgba(0, 230, 118, 0.0);
  --accent-green: #00e676;
  --text-primary: #eeeeee;
  --text-secondary: #a0a0a0;
  --radius-base: 12px;
  --font-main: 'Noto Sans KR', sans-serif;
}

/* 1. 전체 레이아웃 */
.container {
  /* 1) 배경 이미지 + 더 진한 단색 오버레이 */
  background-image:
    /* 알파를 0.8로 올려서 더 어둡게 */
    linear-gradient(rgba(20, 22, 30, 1.8),
      rgba(20, 22, 30, 1.8)),
    url('/images/00_login_background.png');

  /* 2) 이미지 설정 */
  background-position: center;
  background-size: cover;
  background-repeat: no-repeat;

  /* 3) 블렌드 모드 (필요 없다면 제거해도 됩니다) */
  background-blend-mode: overlay;

  /* 기존 스타일 */
  display: flex;
  flex-direction: column;
  padding: 16px;
  backdrop-filter: blur(12px);
  border-radius: 16px;
  height: 100vh;
}

.header {
  display: flex;
  align-items: center;
  justify-content: space-between;
  padding: 1rem 2rem;
  backdrop-filter: blur(10px);
  -webkit-backdrop-filter: blur(10px);
  background: var(--glass-bg);
  border-bottom: 1px solid var(--glass-border);
  box-shadow: 0 4px 12px var(--glass-shadow);
}

.fullWidth {
  display: flex !important;
  width: 100% !important;
}

.dropdownGroup {
  display: flex;
  align-items: center;
  gap: 10px;
  /* 드롭다운 사이 간격 */
}

.fieldsRow {
  display: flex;
  gap: 1rem;
  flex: 1;
}

/* 3. 드롭다운 기본 스타일: 가로폭 fit-content 적용 */
.fieldsRow select,
.fieldsRow .dropdownContainer,
.fieldsRow .employeeBox {
  background: rgba(30, 30, 35, 0.1);
  color: var(--text-primary);
  border: 1px solid var(--glass-border);
  border-radius: 8px;
  padding: 0.25rem 0.75rem;
  appearance: none;
  width: fit-content;
  min-width: 6rem;
  /* 최소 너비 설정 */
  display: inline-flex;
  align-items: center;
}

.fieldsRow select,
.fieldsRow .employeeBox {
  padding-right: 1.5rem;
}

.toggleButton {
  display: inline-flex;
  align-items: center;
  justify-content: space-between;

  width: auto;
  /* ← 여기 auto */
  min-width: 6rem;
  /* 너무 작아지는 건 방지 */
  /* padding: 0.5rem 0.75rem; */
  background: rgba(40, 40, 45, 0.8);
  border: 1px solid rgba(255, 255, 255, 0.2);
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.3s;
  flex-shrink: 0;
}

.darkSelect {
  background-color: #3a3a3a;
  color: #ffffff;
  border: 1px solid #555555;
  border-radius: 4px;
  padding: 6px 8px;
  min-width: 140px;
  appearance: none;
}

.employeeBox {
  background-color: #3a3a3a;
  color: #ffffff;
  border: 1px solid #555555;
  border-radius: 4px;
  padding: 6px 8px;
  min-width: 140px;
  text-align: center;
}


.logoutBtn {
  padding: 0.5rem 1rem;
  background: #e06c75;
  color: #ffffff;
  border: none;
  border-radius: 6px;
  cursor: pointer;
  transition: background 0.2s ease;
}

.logoutBtn:hover {
  background: #c65a62;
}

/* ─────────────────────────────────────────────────────────────────────────────
   3. 챗봇 본문 영역 (chatbotBody)
   • display: flex; flex-direction: column;로 설정
   • background-color을 DialogPage 기본 배경(#181a1b)과 동일하게 통일
   • 내부 padding/overflow는 DialogPage가 직접 처리하도록 남겨둠
───────────────────────────────────────────────────────────────────────────── */

.chatbotBody {
  flex: 1;
  overflow-y: auto;
  background: var(--bg-dark) transparent;
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  padding: 1rem;
}

/* ─────────────────────────────────────────────────────────────────────────────
   4. 챗봇 목록/업로드 영역(챗봇 미선택 시)
───────────────────────────────────────────────────────────────────────────── */
.chatbotContent {
  width: 100%;
  max-width: 1200px;
  margin: 0 auto;
}

.subheading {
  font-size: 1.4rem;
  font-weight: 600;
  color: #ffffff;
  margin: 20px 0 12px 20px;
}

.chatbotListContainer {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(25%, 1fr));
  gap: 1rem;
  margin-bottom: 2rem;
  padding: 0 1rem;
}

.chatbotCard {
  position: relative;
  background: var(--glass-bg);
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
  border: 1px solid var(--glass-border);
  border-radius: var(--radius-base);
  box-shadow: 0 4px 16px var(--glass-shadow);
  padding: 1rem;
  color: var(--text-primary);
  transition: transform 0.1s ease;
}

.chatbotCard:hover {
  transform: translateY(-2px);
  --glass-shadow: rgba(0, 230, 118, 0.2);
  --glass-border: rgba(0, 230, 118, 0.3);
}

.cardHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 0.5rem;
}

.chatbotName {
  font-size: 1.2rem;
  font-weight: 600;
}

.cardMeta {
  font-size: 0.9rem;
  color: var(--text-secondary);
  margin-bottom: 1rem;
}

.cardMeta strong {
  color: #f0f0f0;
}

.cardActions {
  display: flex;
  gap: 0.5rem;
}

.deleteButton {
  position: absolute;
  top: 0.5rem;
  right: 0.5rem;
  background: transparent;
  border: none;
  color: var(--text-secondary);
  cursor: pointer;
  transition: color 0.2s ease;
}

.deleteButton:hover {
  color: var(--accent-green);
}

.loadButton,
.retrainButton {
  flex: 1;
  padding: 0.5rem 0.75rem;
  background: rgba(30, 30, 35, 0.8);
  border: none;
  border-radius: 6px;
  color: var(--text-primary);
  cursor: pointer;
  transition: background 0.2s ease;
}

.loadButton:hover,
.retrainButton:hover {
  background: rgba(30, 30, 35, 1);
}

/* 6. 업로드 버튼 */
.uploadBtn {
  display: block;
  margin: 0 auto 2rem;
  padding: 0.75rem 1.5rem;
  background: var(--accent-green);
  color: var(--bg-dark);
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: box-shadow 0.2s ease, transform 0.1s ease;
}

.uploadBtn:hover {
  box-shadow: 0 4px 12px var(--glass-shadow);
  transform: translateY(-2px);
}

.uploadBtn:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

/* 7. 챗봇 없음 메시지 */
.noChatbotContainer {
  text-align: center;
  margin-top: 2rem;
  color: var(--text-secondary);
}

.noChatbotMessage {
  color: #ffcccc;
  margin-bottom: 1rem;
}

/* ─────────────────────────────────────────────────────────────────────────────
   6. 채팅 중일 때: 좌우 레이아웃 (chatWithInfoContainer)
   • chatbotBody 높이를 모두 채우도록 flex:1
   • overflow: hidden → 내부 DialogPage가 스크롤 처리
───────────────────────────────────────────────────────────────────────────── */
.chatWithInfoContainer {
  display: flex;
  flex: 1;
  overflow: hidden;
}

/* ─────────────────────────────────────────────────────────────────────────────
   좌측: 대화 영역 (conversationArea)
   • flex:1 으로 chatbotBody 높이를 물려받아 고정
   • overflow: hidden → 내부 DialogPage가 스크롤 처리
───────────────────────────────────────────────────────────────────────────── */
.conversationArea {
  display: flex;
  flex-direction: column;
  flex: 1;
  overflow: hidden;
}

/* 정보 패널 열렸을 때 폭 비율 조정 (좌측 flex:2 vs 우측 flex:1) */
.conversationShrunk {
  flex: 2;
}

/* ─────────────────────────────────────────────────────────────────────────────
   우측: 정보보기 패널 (infoPanel)
   • flex:1 으로 chatbotBody 높이를 물려받아 고정
   • background-color를 #2f2f2f로 지정해 “살짝 구분” 효과
───────────────────────────────────────────────────────────────────────────── */
.infoPanel {
  flex: 1;
  display: flex;
  flex-direction: column;
  border-left: 1px solid #3a3a3a;
  background-color: #2f2f2f;
  overflow: hidden;
}

/* 패널 헤더 */
.panelHeader {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 8px 12px;
  border-bottom: 1px solid #444444;
  color: #ffffff;
  font-weight: bold;
}

.closeButton {
  background: none;
  border: none;
  color: #ffffff;
  font-size: 18px;
  cursor: pointer;
}

/* PDF 컨테이너 */
.pdfContainer {
  flex: 1;
  overflow-y: auto;
  padding: 8px;
  background-color: #2f2f2f;
}

/* ─────────────────────────────────────────────────────────────────────────────
   7. 학습 로그 영역
───────────────────────────────────────────────────────────────────────────── */
.logContainer {
  width: 90vw;
  max-width: 1100px;
  margin: 20px auto;
  background-color: #2a2a2a;
  border: 1px solid #444;
  border-radius: 4px;
  padding: 12px;
  max-height: 400px;
  overflow-y: auto;
}

.logTitle {
  margin: 0 0 8px 0;
  font-size: 1rem;
  color: #ffffff;
}

.logOutput {
  font-family: 'Courier New', monospace;
  font-size: 0.9rem;
  color: #e0e0e0;
}

.logStdout {
  color: #a0a0a0;
  white-space: pre-wrap;
  margin: 0;
}

.logError {
  color: #e08080;
  white-space: pre-wrap;
  margin: 0;
}

.logInfo {
  color: #80c0ff;
  white-space: pre-wrap;
  margin: 0;
}

/* ─────────────────────────────────────────────────────────────────────────────
   8. 모달 관련 스타일
───────────────────────────────────────────────────────────────────────────── */
/* 8. 모달 오버레이 */
.modalOverlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 100;
}

.modalContent {
  background: var(--glass-bg);
  backdrop-filter: blur(12px);
  -webkit-backdrop-filter: blur(12px);
  border: 1px solid var(--glass-border);
  border-radius: var(--radius-base);
  padding: 2rem;
  width: 90%;
  max-width: 360px;
  color: var(--text-primary);
}

.modalContent h3 {
  margin-bottom: 1rem;
}

.modalContent input {
  width: 100%;
  padding: 0.75rem;
  background: rgba(30, 30, 35, 0.8);
  border: 1px solid var(--glass-border);
  border-radius: 6px;
  color: var(--text-primary);
  margin-bottom: 1rem;
}

.modalButtons {
  display: flex;
  justify-content: flex-end;
  gap: 0.5rem;
}

.modalButtons button {
  padding: 0.5rem 1rem;
  border: none;
  border-radius: 6px;
  cursor: pointer;
}

.modalButtons .confirmButton {
  background: var(--accent-green);
  color: var(--bg-dark);
}

.modalButtons .confirmButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.modalButtons .cancelButton {
  background: rgba(255, 255, 255, 0.2);
  color: var(--text-secondary);
}


.confirmButton,
.cancelButton {
  flex: 1;
  padding: 8px 12px;
  border: none;
  border-radius: 4px;
  color: #fff;
  font-size: 1rem;
  cursor: pointer;
}

.confirmButton {
  background-color: #4caf50;
}

.confirmButton:disabled {
  opacity: 0.6;
  cursor: not-allowed;
}

.confirmButton:hover:enabled {
  background-color: #2ecc71;
}

.cancelButton {
  background-color: #a94442;
}

.cancelButton:hover {
  background-color: #e74c3c;
}

/* ─────────────────────────────────────────────────────────────────────────────
   9. 로딩 스피너 오버레이
───────────────────────────────────────────────────────────────────────────── */
/* 9. 스피너 */
.spinnerOverlay {
  position: fixed;
  inset: 0;
  background: rgba(0, 0, 0, 0.6);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 200;
}

.spinner {
  width: 48px;
  height: 48px;
  border: 4px solid rgba(255, 255, 255, 0.2);
  border-top-color: var(--accent-green);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

.loadingOverlayText {
  margin-top: 1rem;
  color: var(--text-primary);
  font-size: 1rem;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* ────────────────────────────────────────────────────────────────────────────
   1) 헤더를 최상단 레이어로 올리고, 스크롤해도 붙어 있도록 sticky 적용
───────────────────────────────────────────────────────────────────────────── */
.header {
  position: sticky;    /* 또는 relative 로만 사용해도 됩니다 */
  top: 0;
  z-index: 1000;       /* 충분히 높은 값 */
}

/* ────────────────────────────────────────────────────────────────────────────
   2) 챗봇 본문을 그 아래 레이어로 낮추기
───────────────────────────────────────────────────────────────────────────── */
.chatbotBody {
  position: relative;  /* stacking 컨텍스트 리셋 */
  z-index: 0;          /* 헤더(1000)보다 낮게 */
}

/* ────────────────────────────────────────────────────────────────────────────
   3) 드롭다운 컨테이너와 메뉴는 헤더 위에 다시 뜨도록
───────────────────────────────────────────────────────────────────────────── */
.dropdownContainer {
  position: relative;  
  z-index: 1001;       /* 헤더(1000)보다 약간 높게 */
}

.menu {
  z-index: 1002 !important;
}
